name: Node.js Docker CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    # PostgreSQL service container untuk test
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: crm
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Setup database
        run: |
          psql postgresql://postgres:12345@localhost:5432/crm <<EOF
          CREATE TABLE IF NOT EXISTS users (
            id SERIAL PRIMARY KEY,
            name VARCHAR(100) NOT NULL,
            email VARCHAR(150) NOT NULL UNIQUE,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
          );
          INSERT INTO users (name, email) VALUES ('Alice','alice@example.com');
EOF

      - name: Run tests
        env:  # pakai secrets agar aman jika mau ganti DB real
          DB_HOST: localhost
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
        run: npm test

      - name: Build Docker image
        run: docker build -t crm_api .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          docker tag crm_api:latest ${{ secrets.DOCKER_USERNAME }}/crm_api:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/crm_api:latest
