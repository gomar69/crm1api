name: Node.js Docker CI/CD

on:
  push:
    branches: [ main ]     # Trigger workflow saat push ke main
  pull_request:
    branches: [ main ]     # Trigger workflow saat PR ke main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    # --------------------------
    # Service PostgreSQL untuk test
    # --------------------------
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: crm            # Nama database dummy untuk testing
          POSTGRES_USER: postgres     # User dummy untuk testing
          POSTGRES_PASSWORD: postgres # Password dummy
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # --------------------------
      # Checkout repository
      # --------------------------
      - name: Checkout repo
        uses: actions/checkout@v3

      # --------------------------
      # Setup Node.js versi 20
      # --------------------------
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # --------------------------
      # Install dependencies
      # --------------------------
      - name: Install dependencies
        run: npm install

      # --------------------------
      # Tunggu sampai Postgres service siap
      # --------------------------
      - name: Wait for Postgres to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for Postgres..."
            sleep 2
          done

      # --------------------------
      # Setup database test
      # --------------------------
      - name: Setup database
        run: |
          psql postgresql://postgres:postgres@localhost:5432/crm -f db/init.sql
          # db/init.sql berisi CREATE TABLE & INSERT dummy data

      # --------------------------
      # Jalankan tests
      # --------------------------
      - name: Run tests
        env:  # pakai secrets untuk aman, jangan hardcode password production
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
        run: npm test

      # --------------------------
      # Build Docker image
      # --------------------------
      - name: Build Docker image
        run: docker build -t crm_api .

      # --------------------------
      # Login ke Docker Hub (pakai secrets)
      # --------------------------
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # --------------------------
      # Push Docker image ke Docker Hub
      # --------------------------
      - name: Push Docker image
        run: |
          docker tag crm_api:latest ${{ secrets.DOCKER_USERNAME }}/crm_api:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/crm_api:latest
